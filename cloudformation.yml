AWSTemplateFormatVersion: 2010-09-09
Description: 'Editors picks uploader'

Parameters:
  Stage:
    Description: 'Environment name'
    Type: String
    Default: CODE
  CMSFrontsRoleArn:
    Description: 'CMSFronts role arn to assume for retrieving fronts'
    Type: String
  NextgenApiUrl:
    Description: 'URL of nextgen api'
    Type: String
  AlarmTopic:
    Description: The SNS topic that urgent CloudWatch alarms publish to
    Type: String

Resources:
  RootRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ 'lambda.amazonaws.com' ]
            Action: [ 'sts:AssumeRole' ]
      Policies:
          - PolicyName: LambdaPolicy
            PolicyDocument:
              Statement:
                - Effect: Allow
                  Action: [ 'logs:CreateLogGroup', 'logs:CreateLogStream', 'logs:PutLogEvents', 'lambda:InvokeFunction' ]
                  Resource: [ '*' ]
          - PolicyName: CMSFrontsAccessPolicy
            PolicyDocument:
              Statement:
                - Effect: Allow
                  Action: sts:AssumeRole
                  Resource: !Ref CMSFrontsRoleArn
          - PolicyName: S3ConfigAccessPolicy
            PolicyDocument:
              Statement:
                - Effect: Allow
                  Action: [ 's3:Get*', 's3:List*' ]
                  Resource: [ 'arn:aws:s3:::content-api-config/editors-picks-uploader/*' ]
          - PolicyName: SnsPublish
            PolicyDocument:
              Statement:
                - Effect: Allow
                  Action: [ 'sns:ListTopics', 'sns:Publish' ]
                  Resource: !Ref NotificationsTopic

  NotificationsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub content-api-notifications-shuttlerun-${Stage}

  SNSAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Alarm when no messages for 10mins
      Namespace: AWS/SNS
      MetricName: NumberOfMessagesPublished
      Dimensions:
        - Name: TopicName
          Value: !GetAtt NotificationsTopic.TopicName
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 0
      ComparisonOperator: LessThanOrEqualToThreshold
      AlarmActions:
        - Ref: AlarmTopic
      InsufficientDataActions:
        - Ref: AlarmTopic

  Lambda:
    Type : AWS::Lambda::Function
    Properties:
      FunctionName: !Sub editors-picks-uploader-${Stage}
      Environment:
        Variables:
          awsRegion: !Ref AWS::Region
          awsCmsFrontSTSRoleArn: !Ref CMSFrontsRoleArn
          awsTopicArn: !Ref NotificationsTopic
          nextgenApiUrl: !Ref NextgenApiUrl
          stage: !Ref Stage
      Code:
        S3Bucket: content-api-dist
        S3Key: !Sub content-api/${Stage}/editors-picks-uploader/editors-picks-uploader.zip
      Description: 'Editors picks uploader - retrieves and uploads editors picks for consumption by the Content API'
      Handler : com.gu.contentapi.Lambda::handleRequest
      MemorySize : 320
      Role: !GetAtt RootRole.Arn
      Runtime : java8
      Timeout : 180
